class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> ans(n , vector<int>(n , 0));
        int left = 0;
        int top = 0;
        int right = n-1;
        int bottom = n-1;

        int val = 1;
        int ptr = 0;
        int matSize = n*n;
        while(ptr < matSize){
            for(int i=left; i<=right; i++){
                ans[top][i] = val ++;
                ptr ++;
            }
            top ++;
            // Traversign right edge boundary
            for(int i =top; i<=bottom; i++){
                ans[i][right] = val ++;
                ptr ++;
            }
            right --;
            // Traversing the Bottom Edge boundary right -> left
            for(int i=right; i>=left; i--){
                ans[bottom][i] = val ++;
                ptr ++;
            }
            bottom --;
            // Traversing the left Edge boundary form bottom -> top
            for(int i = bottom ; i>=top; i--){
                ans[i][left] = val ++;
                ptr ++;
            }
            left ++;
        }

        return ans;
    }
};
