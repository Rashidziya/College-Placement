class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int minLen = INT_MAX;
        int len = nums.size();
        int i = 0;
        long long currSum = 0;
        

        for(int j=0; j<len; j++){
            currSum += nums[j];

            while(currSum >= target){
                minLen = min(minLen , j-i+1);
                currSum -= nums[i];
                i++;
            }
        }


        return minLen == INT_MAX ? 0: minLen;
    }
};

*/

                                Question leetcode 
Given an array of positive integers nums and a positive integer target, return the minimal length of a 
subarray
 whose sum is greater than or equal to target. If there is no such subarray, return 0 instead.

 

Example 1:

Input: target = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: The subarray [4,3] has the minimal length under the problem constraint

/*
